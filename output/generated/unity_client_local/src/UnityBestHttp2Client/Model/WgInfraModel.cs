/* 
 * Battlecorp Horizon
 *
 * This documentation is for developpers of the Battlecorp Horizon application. Any usage of this API in time will require a dedicated access token in order to interact with the API.         Pointing to Database Prefix: DEV_sebus
 *
 * OpenAPI spec version: 1.0
 * Contact: contact@fedcom.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = UnityBestHttp2Client.Client.SwaggerDateConverter;

namespace UnityBestHttp2Client.Model
{
    /// <summary>
    /// WgInfraModel
    /// </summary>
    [DataContract]
        public partial class WgInfraModel :  IEquatable<WgInfraModel>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WgInfraModel" /> class.
        /// </summary>
        /// <param name=""> (required) (default to null).</param>
        /// <param name=""> (default to null).</param>
        /// <param name="">Building phase duration (required) (default to null).</param>
        /// <param name="">Infra max population (required) (default to null).</param>
        /// <param name="">Infra recipes (required) (default to null).</param>
        public WgInfraModel(WgPriceModel  = null, WgPriceModel  = null, Integer  = null, Integer  = null, List  = null, )
        {
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new InvalidDataException(" is a required property for WgInfraModel and cannot be null");
            }
            else
            {
                this.price = ;
            }
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new InvalidDataException(" is a required property for WgInfraModel and cannot be null");
            }
            else
            {
                this.buildDuration = ;
            }
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new InvalidDataException(" is a required property for WgInfraModel and cannot be null");
            }
            else
            {
                this.populationMax = ;
            }
            // to ensure "" is required (not null)
            if ( == null)
            {
                throw new InvalidDataException(" is a required property for WgInfraModel and cannot be null");
            }
            else
            {
                this.recipes = ;
            }
            // use default value if no "" provided
            if ( == null)
            {
                this.upkeep = null;
            }
            else
            {
                this.upkeep = ;
            }
        }
        
        /// <summary>
        /// Gets or Sets price
        /// </summary>
        [DataMember(Name="price", EmitDefaultValue=)]
        public WgPriceModel price { get; set; }

        /// <summary>
        /// Gets or Sets upkeep
        /// </summary>
        [DataMember(Name="upkeep", EmitDefaultValue=)]
        public WgPriceModel upkeep { get; set; }

        /// <summary>
        /// Building phase duration
        /// </summary>
        /// <value>Building phase duration</value>
        [DataMember(Name="buildDuration", EmitDefaultValue=)]
        public Integer buildDuration { get; set; }

        /// <summary>
        /// Infra max population
        /// </summary>
        /// <value>Infra max population</value>
        [DataMember(Name="populationMax", EmitDefaultValue=)]
        public Integer populationMax { get; set; }

        /// <summary>
        /// Infra recipes
        /// </summary>
        /// <value>Infra recipes</value>
        [DataMember(Name="recipes", EmitDefaultValue=)]
        public List recipes { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class WgInfraModel {\n");
            sb.Append("  price: ").Append(price).Append("\n");
            sb.Append("  upkeep: ").Append(upkeep).Append("\n");
            sb.Append("  buildDuration: ").Append(buildDuration).Append("\n");
            sb.Append("  populationMax: ").Append(populationMax).Append("\n");
            sb.Append("  recipes: ").Append(recipes).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as WgInfraModel);
        }

        /// <summary>
        /// Returns true if WgInfraModel instances are equal
        /// </summary>
        /// <param name="input">Instance of WgInfraModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(WgInfraModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.price == input.price ||
                    (this.price != null &&
                    this.price.Equals(input.price))
                ) && 
                (
                    this.upkeep == input.upkeep ||
                    (this.upkeep != null &&
                    this.upkeep.Equals(input.upkeep))
                ) && 
                (
                    this.buildDuration == input.buildDuration ||
                    (this.buildDuration != null &&
                    this.buildDuration.Equals(input.buildDuration))
                ) && 
                (
                    this.populationMax == input.populationMax ||
                    (this.populationMax != null &&
                    this.populationMax.Equals(input.populationMax))
                ) && 
                (
                    this.recipes == input.recipes ||
                    this.recipes != null &&
                    this.recipes.SequenceEqual(input.recipes)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.price != null)
                    hashCode = hashCode * 59 + this.price.GetHashCode();
                if (this.upkeep != null)
                    hashCode = hashCode * 59 + this.upkeep.GetHashCode();
                if (this.buildDuration != null)
                    hashCode = hashCode * 59 + this.buildDuration.GetHashCode();
                if (this.populationMax != null)
                    hashCode = hashCode * 59 + this.populationMax.GetHashCode();
                if (this.recipes != null)
                    hashCode = hashCode * 59 + this.recipes.GetHashCode();
                return hashCode;
            }
        }

    }
}
